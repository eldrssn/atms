{"version":3,"sources":["utils.js","components/Output.jsx","data.js","components/Numpad.jsx","components/ATMPage.jsx","components/CardATM.jsx","components/EnterPage.jsx","App.js","index.js"],"names":["showAmountOfMoney","atm","myString","banknot","toNum","string","Number","replace","toFloat","num","toFixed","withdraw","value","cash","setOutputInfo","bills","result","totalReceived","counting","i","length","setTimeout","waitingCash","amountOfBills","change","Output","outputInfo","balanceOfATM","className","type","color","height","width","atms","id","title","numpad","Numpad","onClickButton","map","key","onClick","ATMPage","useState","setValue","isWithdraw","setIsWithdraw","inputRef","useRef","setValueAndFocus","focus","href","ref","input","placeholder","autoFocus","onChange","evt","setState","pattern","re","target","test","isRightPattern","onKeyPress","CardATM","onATMClick","EnterPage","history","setAtm","push","App","exact","path","render","props","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.393c098c.chunk.js","sourcesContent":["export const showAmountOfMoney = (atm) => {\r\n  let myString = ''\r\n  for (let banknot in atm) {\r\n    myString += `${banknot}₽: ${atm[banknot]}шт; `;\r\n  }\r\n    return myString;\r\n}\r\n\r\nexport const isRightPattern = (evt, setState, pattern) => {\r\n  const re = pattern;\r\n    if (evt.target.value === '' || re.test(evt.target.value)) {\r\n      setState(evt.target.value)\r\n    }\r\n}\r\n\r\nexport const toNum = (string) => {\r\n  return Number(string.replace(',', '.'))\r\n}\r\n\r\nconst toFloat = (num) => {\r\n  return num.toFixed(2);\r\n}\r\n\r\nexport const withdraw = (value, cash, setOutputInfo) => {\r\n  const MIN_VALUE = 50;\r\n  const bills = [5000, 2000, 1000, 500, 200, 100, 50];\r\n  const result = {};\r\n  let totalReceived = 0;\r\n  \r\n  const counting = () => {\r\n    for (let i = 0; i < bills.length; i++) {\r\n\r\n      if (value >= bills[i]) {\r\n\r\n        if (!cash[bills[i]]) {\r\n          continue;\r\n        }\r\n\r\n        (!result[bills[i]]) ? result[bills[i]] = 1 : result[bills[i]]++;\r\n        value -= bills[i];\r\n        totalReceived += bills[i]\r\n        cash[bills[i]]--;\r\n      } \r\n    }\r\n    \r\n    if (value >= MIN_VALUE) {\r\n      setTimeout(counting);\r\n      setOutputInfo({waitingCash: true})\r\n    } else {\r\n      setOutputInfo({\r\n        totalReceived: toFloat(totalReceived),\r\n        amountOfBills: result,\r\n        waitingCash: false,\r\n        change: toFloat(value)\r\n      })\r\n    }\r\n  }\r\n    counting();\r\n}","import React from 'react';\r\nimport { showAmountOfMoney } from '../utils';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Output = ({ outputInfo, balanceOfATM}) => {\r\n  const { waitingCash, totalReceived, amountOfBills, change } = outputInfo;\r\n\r\n  return (\r\n    <>\r\n      {waitingCash ? (\r\n        <div className=\"loader\">\r\n          <Loader type=\"Puff\" color=\"#2c3be04b\" height={120} width={120} />\r\n        </div>\r\n      ) : (    \r\n        <div className=\"output\">\r\n          <p>Вы получили: {totalReceived}₽</p>\r\n          <p className=\"output-bills\">В купюрах: {showAmountOfMoney(amountOfBills)}</p>\r\n          <p>Не выдано: {change}₽</p>\r\n          <p className=\"output-bills\">Остаток в банкомате: {showAmountOfMoney(balanceOfATM)}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Output;","export const atms = [\r\n  { \r\n    id: 1,\r\n    title: 'ул. Ленина, 86',\r\n    cash: {\r\n      5000: 100,\r\n      2000: 400,\r\n      1000: 1000,\r\n      500: 3000,\r\n      200: 5000,\r\n      100: 8000,\r\n      50: 10000\r\n    }\r\n  }, \r\n  {\r\n    id: 2,\r\n    title: 'ул. Разъезжая, 2',\r\n    cash: {\r\n      5000: 476,\r\n      2000: 345,\r\n      1000: 6741,\r\n      500: 4362,\r\n      200: 234,\r\n      100: 1643,\r\n      50: 3450\r\n    }\r\n  }, \r\n  {\r\n    id: 3,\r\n    title: 'ул. Кирова, 44',\r\n    cash: {\r\n      5000: 234,\r\n      2000: 678,\r\n      1000: 845,\r\n      500: 2451,\r\n      200: 9654,\r\n      100: 2345,\r\n      50: 234\r\n    }\r\n  }, \r\n  {\r\n    id: 4,\r\n    title: 'ул. Боровая, 10',\r\n    cash: {\r\n      5000: 546,\r\n      2000: 562,\r\n      1000: 2543,\r\n      500: 4365,\r\n      200: 2154,\r\n      100: 124,\r\n      50: 342\r\n    }\r\n  }, \r\n  {\r\n    id: 5,\r\n    title: 'ул. Марата, 99',\r\n    cash: {\r\n      5000: 2732,\r\n      2000: 347,\r\n      1000: 479,\r\n      500: 7556,\r\n      200: 3296,\r\n      100: 1257,\r\n      50: 3854\r\n    }\r\n  }, \r\n  {\r\n    id: 6,\r\n    title: 'ул Малышева, 86',\r\n    cash: {\r\n      5000: 73,\r\n      2000: 147,\r\n      1000: 279,\r\n      500: 356,\r\n      200: 696,\r\n      100: 857,\r\n      50: 854\r\n    }\r\n  }, \r\n];\r\n\r\nexport const numpad = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'ok', '0', 'del', ','];","import React from 'react';\r\nimport { numpad } from '../data';\r\n\r\nconst Numpad = ({onClickButton}) => {\r\n  return (\r\n    <section className=\"numpad-wrapper\">\r\n        {numpad.map(key => {\r\n          return <button \r\n            key={key} \r\n            type=\"button\"\r\n            onClick={() => onClickButton(key)}\r\n          >\r\n            {key}\r\n          </button>\r\n        })}\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default Numpad;","import React, { useState, useRef } from 'react';\r\nimport { showAmountOfMoney } from '../utils';\r\nimport Output from './Output';\r\nimport { isRightPattern, withdraw, toNum } from '../utils';\r\nimport Numpad from './Numpad';\r\n\r\nconst ATMPage = ({atm}) => {\r\n  \r\n  let [value, setValue] = useState('');\r\n  const [isWithdraw, setIsWithdraw] = useState(false);\r\n  const [outputInfo, setOutputInfo] = useState({\r\n    waitingCash: false,\r\n    totalReceived: 0,\r\n    amountOfBills: 0,\r\n    change: 0\r\n  })\r\n  let inputRef = useRef(null);\r\n  \r\n  const onChangeValue = (evt) => {    \r\n    isRightPattern(evt, setValue, /^[ 0-9,]+$/)\r\n  }\r\n  \r\n  const setValueAndFocus = (value) => {\r\n    setValue(value);\r\n    inputRef.focus();\r\n  }\r\n\r\n  const onClickButton = (key) => {\r\n    if (key === \"ok\" && !value) {\r\n      inputRef.focus();\r\n      return;\r\n    }\r\n\r\n    if (key === \"ok\" && value) {\r\n      withdraw(toNum(value), atm.cash, setOutputInfo);\r\n      setIsWithdraw(true)\r\n      setValueAndFocus('');\r\n      return;\r\n    }\r\n\r\n    if (key === 'del') {\r\n      setValueAndFocus('');\r\n      return;\r\n    }\r\n\r\n    setValueAndFocus(value += key)\r\n  }\r\n\r\n  const onEnterPress = (evt) => {\r\n    if (evt.key === 'Enter' && value) {\r\n      withdraw(toNum(value), atm.cash, setOutputInfo);\r\n      setIsWithdraw(true)\r\n      setValueAndFocus('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <h2 className=\"main-header\">Банкомат на <a href=\"/atms/\">{atm.title}</a></h2>\r\n      <div className=\"input-wrapper\">\r\n        <input \r\n          ref={(input) => {inputRef = input}}\r\n          type=\"text\" \r\n          placeholder=\"Введите сумму\" \r\n          value={value} \r\n          autoFocus \r\n          onChange={onChangeValue} \r\n          onKeyPress={onEnterPress}\r\n          />\r\n        <span \r\n          className=\"question-sign\" \r\n          data-tooltip={'Наличных в банкомате: ' + showAmountOfMoney(atm.cash)} \r\n        >\r\n          ?\r\n        </span>\r\n      </div>\r\n      \r\n      <Numpad onClickButton={onClickButton}/>\r\n      \r\n      {isWithdraw &&\r\n        <Output outputInfo={outputInfo} balanceOfATM={atm.cash}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ATMPage;","import React from 'react';\r\nimport { showAmountOfMoney } from '../utils';\r\n\r\nconst CardATM = ({atm, onATMClick}) => {\r\n  const {title, cash} = atm;\r\n\r\n  return (\r\n    <li onClick={() => onATMClick(atm)}>\r\n      <div>\r\n        {title}\r\n        <span \r\n          className=\"question-sign\" \r\n          data-tooltip={'Наличных в банкомате: ' + showAmountOfMoney(cash)}\r\n        >\r\n          ?\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CardATM;","import React from 'react';\r\nimport CardATM from './CardATM';\r\nimport { atms } from \"../data\";\r\n\r\nconst EnterPage = ({history, setAtm}) => {\r\n\r\n  const onATMClick = (atm) => {\r\n    history.push(`/atm/${atm.id}`);\r\n    setAtm(atm);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <h1 className=\"main-header\">Выберете банкомат для выдачи денег</h1>\r\n      <ul className=\"atms-wrapper\">\r\n        {atms.map(atm => {\r\n          return <CardATM onATMClick={onATMClick} key={atm.id} atm={atm}/>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterPage;","import { useState } from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport ATMPage from \"./components/ATMPage\";\nimport EnterPage from \"./components/EnterPage\";\n\nfunction App() {\n  const [atm, setAtm] = useState({}); \n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route \n          exact \n          path=\"/\" \n          render={(props) => <EnterPage setAtm={setAtm} {...props} />}\n        />\n        <Route \n          path=\"/atm/:id\" \n          render={(props) => <ATMPage atm={atm} {...props} />}\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history'\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["utils.js","components/Output.jsx","data.js","components/Numpad.jsx","withdrawCash.js","components/ATMPage.jsx","components/CardATM.jsx","components/EnterPage.jsx","App.js","index.js"],"names":["showAmountOfMoney","atm","myString","banknot","toNum","string","Number","replace","toFloat","num","toFixed","Output","outputInfo","balanceOfATM","waitingCash","totalReceived","amountOfBills","change","className","type","color","height","width","atms","id","title","cash","numpad","Numpad","onClickButton","map","key","onClick","withdraw","value","setOutputInfo","bills","result","minValue","bill","getMinValue","ratio","distr","push","getRatio","getResult","i","counting","numArray","maxRatio","Math","max","apply","minRatio","min","getMinOfArray","indexMaxRatio","indexOf","length","setTimeout","ATMPage","useState","setValue","isWithdraw","setIsWithdraw","inputRef","useRef","setValueAndFocus","focus","href","ref","input","placeholder","autoFocus","onChange","evt","setState","pattern","re","target","test","isRightPattern","onKeyPress","CardATM","onATMClick","EnterPage","history","setAtm","App","exact","path","render","props","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1eb9c68e.chunk.js","sourcesContent":["export const showAmountOfMoney = (atm) => {\r\n  let myString = ''\r\n  for (let banknot in atm) {\r\n    myString += `${banknot}₽: ${atm[banknot]}шт; `;\r\n  }\r\n    return myString;\r\n}\r\n\r\nexport const isRightPattern = (evt, setState, pattern) => {\r\n  const re = pattern;\r\n    if (evt.target.value === '' || re.test(evt.target.value)) {\r\n      setState(evt.target.value)\r\n    }\r\n}\r\n\r\nexport const toNum = (string) => {\r\n  return Number(string.replace(',', '.'))\r\n}\r\n\r\nexport const toFloat = (num) => {\r\n  return num.toFixed(2);\r\n}\r\n\r\nexport const getMaxOfArray = (numArray) => {\r\n  return Math.max.apply(null, numArray);\r\n}\r\n\r\nexport const getMinOfArray = (numArray) => {\r\n  return Math.min.apply(null, numArray);\r\n}","import React from 'react';\r\nimport { showAmountOfMoney } from '../utils';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Output = ({ outputInfo, balanceOfATM}) => {\r\n  const { waitingCash, totalReceived, amountOfBills, change } = outputInfo;\r\n\r\n  return (\r\n    <>\r\n      {waitingCash ? (\r\n        <div className=\"loader\">\r\n          <Loader type=\"Puff\" color=\"#2c3be04b\" height={120} width={120} />\r\n        </div>\r\n      ) : (    \r\n        <div className=\"output\">\r\n          <p>Вы получили: {totalReceived}₽</p>\r\n          <p className=\"output-bills\">В купюрах: {showAmountOfMoney(amountOfBills)}</p>\r\n          <p>Не выдано: {change}₽</p>\r\n          <p className=\"output-bills\">Остаток в банкомате: {showAmountOfMoney(balanceOfATM)}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Output;","export const atms = [\r\n  { \r\n    id: 1,\r\n    title: 'ул. Ленина, 86',\r\n    cash: {\r\n      5000: 100,\r\n      2000: 400,\r\n      1000: 1000,\r\n      500: 3000,\r\n      200: 5000,\r\n      100: 8000,\r\n      50: 10000\r\n    }\r\n  }, \r\n  {\r\n    id: 2,\r\n    title: 'ул. Разъезжая, 2',\r\n    cash: {\r\n      5000: 476,\r\n      2000: 345,\r\n      1000: 6741,\r\n      500: 4362,\r\n      200: 234,\r\n      100: 1643,\r\n      50: 3450\r\n    }\r\n  }, \r\n  {\r\n    id: 3,\r\n    title: 'ул. Кирова, 44',\r\n    cash: {\r\n      5000: 234,\r\n      2000: 678,\r\n      1000: 845,\r\n      500: 2451,\r\n      200: 9654,\r\n      100: 2345,\r\n      50: 234\r\n    }\r\n  }, \r\n  {\r\n    id: 4,\r\n    title: 'ул. Боровая, 10',\r\n    cash: {\r\n      5000: 546,\r\n      2000: 562,\r\n      1000: 2543,\r\n      500: 4365,\r\n      200: 2154,\r\n      100: 124,\r\n      50: 342\r\n    }\r\n  }, \r\n  {\r\n    id: 5,\r\n    title: 'ул. Марата, 99',\r\n    cash: {\r\n      5000: 2732,\r\n      2000: 347,\r\n      1000: 479,\r\n      500: 7556,\r\n      200: 3296,\r\n      100: 1257,\r\n      50: 3854\r\n    }\r\n  }, \r\n  {\r\n    id: 6,\r\n    title: 'ул Малышева, 86',\r\n    cash: {\r\n      5000: 73,\r\n      2000: 147,\r\n      1000: 279,\r\n      500: 356,\r\n      200: 696,\r\n      100: 857,\r\n      50: 854\r\n    }\r\n  }, \r\n];\r\n\r\nexport const numpad = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'ok', '0', 'del', ','];","import React from 'react';\r\nimport { numpad } from '../data';\r\n\r\nconst Numpad = ({onClickButton}) => {\r\n  return (\r\n    <section className=\"numpad-wrapper\">\r\n        {numpad.map(key => {\r\n          return <button \r\n            key={key} \r\n            type=\"button\"\r\n            onClick={() => onClickButton(key)}\r\n          >\r\n            {key}\r\n          </button>\r\n        })}\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default Numpad;","import { getMaxOfArray, getMinOfArray, toFloat } from \"./utils\";\r\n\r\nexport const withdraw = (value, cash, setOutputInfo) => {\r\n  const MIN_VALUE = 50;\r\n  const bills = [5000, 2000, 1000, 500, 200, 100, 50];\r\n  const result = {};\r\n  let totalReceived = 0;\r\n  \r\n  const getMinValue = () => {\r\n    let num;\r\n    for (let bill in cash) {\r\n      num = cash[bill];\r\n      if (num > cash[bill]) {\r\n        num = cash[bill];\r\n      }\r\n    }\r\n    return num;\r\n  }\r\n  // минимальное количество купюр\r\n  const minValue = getMinValue();\r\n\r\n  const getRatio = () => {\r\n    let result = [];\r\n    for (let bill in cash) {\r\n      let distr = cash[bill] / minValue;\r\n      result.push(distr);\r\n    }\r\n    return result;\r\n  }\r\n  // соотношение купюр в банкомате\r\n  const ratio = getRatio();\r\n\r\n  const getResult = (i) => {\r\n    (!result[bills[i]]) ? result[bills[i]] = 1 : result[bills[i]]++;\r\n    value -= bills[i];\r\n    totalReceived += bills[i]\r\n    cash[bills[i]]--;\r\n  }\r\n\r\n  const counting = () => {\r\n      const maxRatio = getMaxOfArray(ratio);\r\n      const minRatio = getMinOfArray(ratio);\r\n      const indexMaxRatio = ratio.indexOf(maxRatio);\r\n\r\n      for (let i = 0; i < ratio.length; i++) {\r\n        // сначала цикл идет по купюрам, которые в большем количестве\r\n        if (maxRatio !== minRatio && value >= bills[indexMaxRatio]) {\r\n          while (value >= bills[indexMaxRatio]) {\r\n            getResult(indexMaxRatio);\r\n          }\r\n          continue;\r\n        } \r\n        // затем купюры выдаются в одинаковых пропорциях\r\n        if (value >= bills[i]) {\r\n          if (!cash[bills[i]]) {\r\n              continue;\r\n            }\r\n          getResult(i);\r\n          } \r\n        }\r\n        // рекурсия\r\n        if (value >= MIN_VALUE) {\r\n            setTimeout(counting);\r\n            setOutputInfo({waitingCash: true})\r\n          } else {\r\n            setOutputInfo({\r\n              totalReceived: toFloat(totalReceived),\r\n              amountOfBills: result,\r\n              waitingCash: false,\r\n              change: toFloat(value)\r\n            })\r\n          }\r\n        }\r\n          counting();\r\n      }","import React, { useState, useRef } from 'react';\r\nimport { showAmountOfMoney } from '../utils';\r\nimport Output from './Output';\r\nimport { isRightPattern, toNum } from '../utils';\r\nimport Numpad from './Numpad';\r\nimport { withdraw } from '../withdrawCash';\r\n\r\nconst ATMPage = ({atm}) => {\r\n  \r\n  let [value, setValue] = useState('');\r\n  const [isWithdraw, setIsWithdraw] = useState(false);\r\n  const [outputInfo, setOutputInfo] = useState({\r\n    waitingCash: false,\r\n    totalReceived: 0,\r\n    amountOfBills: 0,\r\n    change: 0\r\n  })\r\n  let inputRef = useRef(null);\r\n  \r\n  const onChangeValue = (evt) => {    \r\n    isRightPattern(evt, setValue, /^[ 0-9,]+$/)\r\n  }\r\n  \r\n  const setValueAndFocus = (value) => {\r\n    setValue(value);\r\n    inputRef.focus();\r\n  }\r\n\r\n  const onClickButton = (key) => {\r\n    if (key === \"ok\" && !value) {\r\n      inputRef.focus();\r\n      return;\r\n    }\r\n\r\n    if (key === \"ok\" && value) {\r\n      withdraw(toNum(value), atm.cash, setOutputInfo);\r\n      setIsWithdraw(true)\r\n      setValueAndFocus('');\r\n      return;\r\n    }\r\n\r\n    if (key === 'del') {\r\n      setValueAndFocus('');\r\n      return;\r\n    }\r\n\r\n    setValueAndFocus(value += key)\r\n  }\r\n\r\n  const onEnterPress = (evt) => {\r\n    if (evt.key === 'Enter' && value) {\r\n      withdraw(toNum(value), atm.cash, setOutputInfo);\r\n      setIsWithdraw(true)\r\n      setValueAndFocus('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <h2 className=\"main-header\">Банкомат на <a href=\"/atms/\">{atm.title}</a></h2>\r\n      <div className=\"input-wrapper\">\r\n        <input \r\n          ref={(input) => {inputRef = input}}\r\n          type=\"text\" \r\n          placeholder=\"Введите сумму\" \r\n          value={value} \r\n          autoFocus \r\n          onChange={onChangeValue} \r\n          onKeyPress={onEnterPress}\r\n          />\r\n        <span \r\n          className=\"question-sign\" \r\n          data-tooltip={'Наличных в банкомате: ' + showAmountOfMoney(atm.cash)} \r\n        >\r\n          ?\r\n        </span>\r\n      </div>\r\n      \r\n      <Numpad onClickButton={onClickButton}/>\r\n      \r\n      {isWithdraw &&\r\n        <Output outputInfo={outputInfo} balanceOfATM={atm.cash}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ATMPage;","import React from 'react';\r\nimport { showAmountOfMoney } from '../utils';\r\n\r\nconst CardATM = ({atm, onATMClick}) => {\r\n  const {title, cash} = atm;\r\n\r\n  return (\r\n    <li onClick={() => onATMClick(atm)}>\r\n      <div>\r\n        {title}\r\n        <span \r\n          className=\"question-sign\" \r\n          data-tooltip={'Наличных в банкомате: ' + showAmountOfMoney(cash)}\r\n        >\r\n          ?\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CardATM;","import React from 'react';\r\nimport CardATM from './CardATM';\r\nimport { atms } from \"../data\";\r\n\r\nconst EnterPage = ({history, setAtm}) => {\r\n\r\n  const onATMClick = (atm) => {\r\n    history.push(`/atm/${atm.id}`);\r\n    setAtm(atm);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <h1 className=\"main-header\">Выберете банкомат для выдачи денег</h1>\r\n      <ul className=\"atms-wrapper\">\r\n        {atms.map(atm => {\r\n          return <CardATM onATMClick={onATMClick} key={atm.id} atm={atm}/>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterPage;","import { useState } from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport ATMPage from \"./components/ATMPage\";\nimport EnterPage from \"./components/EnterPage\";\n\nfunction App() {\n  const [atm, setAtm] = useState({}); \n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route \n          exact \n          path=\"/\" \n          render={(props) => <EnterPage setAtm={setAtm} {...props} />}\n        />\n        <Route \n          path=\"/atm/:id\" \n          render={(props) => <ATMPage atm={atm} {...props} />}\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history'\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}